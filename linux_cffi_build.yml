steps:
- bash: |
    sudo apt-get install git g++ gcc wget make cmake libboost-all-dev
  displayName: Setup build environment
- bash: |
    git clone https://github.com/rdkit/rdkit.git
  displayName: Clone main RDKit repo
- bash: |
    cd rdkit && mkdir build && cd build && \
    cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DRDK_BUILD_CPP_TESTS=OFF \
    -DRDK_BUILD_PYTHON_WRAPPERS=OFF \
    -DRDK_BUILD_COORDGEN_SUPPORT=ON \
    -DRDK_BUILD_MAEPARSER_SUPPORT=ON \
    -DRDK_OPTIMIZE_POPCNT=ON \
    -DRDK_BUILD_INCHI_SUPPORT=ON \
    -DRDK_BUILD_THREADSAFE_SSS=ON \
    -DRDK_TEST_MULTITHREADED=ON \
    -DRDK_BUILD_CFFI_LIB=ON \
    -DCMAKE_INCLUDE_PATH="${CONDA_PREFIX}/include" \
    -DCMAKE_LIBRARY_PATH="${CONDA_PREFIX}/lib"
  displayName: Configure build (Run CMake)
- bash: |
    cd rdkit/build
    make -j 2 cffi_test
  displayName: Build
- bash: |
    cd rdkit
    export RDBASE=`pwd`
    export LD_LIBRARY_PATH=${RDBASE}/lib:${CONDA_PREFIX}/lib:${LD_LIBRARY_PATH}
    echo "LD_LIBRARY_PATH: " $LD_LIBRARY_PATH
    cd build
    ./Code/MinimalLib/cffi_test
  displayName: Run tests
- bash: |
    mkdir -p $(Build.ArtifactStagingDirectory)/linux-64
    echo "-----------------"
    ls -l rdkit/build/lib/librdkitcffi.so.1.*
    cd rdkit/build/lib
    FNAME=`ls librdkitcffi.so.1.*`
    BUILD=`git describe --tags --long HEAD | cut -d '-' -f 2`
    cp $FNAME $(Build.ArtifactStagingDirectory)/linux-64/$FNAME.$BUILD
    ls -l $(Build.ArtifactStagingDirectory)/linux-64
  displayName: Create build artifacts
- publish: $(Build.ArtifactStagingDirectory)
  artifact: rdkitcffi_linux
- task: UniversalPackages@0
  displayName: Universal Publish
  inputs:
    command: publish
    publishDirectory: '$(Build.ArtifactStagingDirectory)'
    vstsFeedPublish: 'RDKit/rdkit_cffi'
    vstsFeedPackagePublish: 'rdkitcffi_linux'
    packagePublishDescription: 'linux lib'